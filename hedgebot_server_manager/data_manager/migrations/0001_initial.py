# Generated by Django 4.1.6 on 2023-02-06 21:02

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='current_financial_simulations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('simulation_number', models.IntegerField()),
                ('sugar_price', models.FloatField(default=0, verbose_name='Sugar')),
                ('hydrous_price', models.FloatField(default=0, verbose_name='Hydrous')),
                ('anhydrous_price', models.FloatField(default=0, verbose_name='Anhydrous')),
                ('energy_price', models.FloatField(default=0, verbose_name='Energy')),
                ('fx_rate', models.FloatField(default=0, verbose_name='Exchange rate')),
                ('selic_rate', models.FloatField(default=0, verbose_name='Domestic interest rate')),
                ('foreign_debt_rate', models.FloatField(default=0, verbose_name='Foreign interest rate')),
                ('inflation_rate', models.FloatField(default=0, verbose_name='Inflation')),
                ('crude_price', models.FloatField(default=0, verbose_name='Crude oil')),
                ('fertilizer_price', models.FloatField(default=0, verbose_name='Fertilizers')),
                ('sugar_revenues', models.FloatField(default=0, verbose_name='Sugar Revenues BRL')),
                ('hydrous_revenues', models.FloatField(default=0, verbose_name='Hydrous Revenues BRL')),
                ('anhydrous_revenues', models.FloatField(default=0, verbose_name='Anhydrous Revenues BRL')),
                ('energy_revenues', models.FloatField(default=0, verbose_name='Energy Revenues BRL')),
                ('input_costs', models.FloatField(default=0, verbose_name='Input Cost BRL')),
                ('fuel_costs', models.FloatField(default=0, verbose_name='Fuel Cost BRL')),
                ('freight_costs', models.FloatField(default=0, verbose_name='Freight Cost BRL')),
                ('labor_costs', models.FloatField(default=0, verbose_name='Labor Cost BRL')),
                ('indutrial_costs', models.FloatField(default=0, verbose_name='Industrial Cost BRL')),
                ('depreciation', models.FloatField(default=0, verbose_name='Depreciation BRL')),
                ('planting_costs', models.FloatField(default=0, verbose_name='Planting Cost BRL')),
                ('lease_costs', models.FloatField(default=0, verbose_name='Lease Cost BRL')),
                ('gross_profit', models.FloatField(default=0, verbose_name='Gross Profit BRL')),
                ('sga_costs', models.FloatField(default=0, verbose_name='Total SG&A BRL')),
                ('ebit', models.FloatField(default=0, verbose_name='EBIT')),
                ('financial_costs', models.FloatField(default=0, verbose_name='Financial Expenses BRL')),
                ('ebt', models.FloatField(default=0, verbose_name='Profit Before Tax BRL')),
                ('tax', models.FloatField(default=0, verbose_name='Income Tax BRL')),
                ('net_income', models.FloatField(default=0, verbose_name='Net Income BRL')),
                ('gross_margin', models.FloatField(default=0, verbose_name='Gross Margin')),
                ('ebitda_margin', models.FloatField(default=0, verbose_name='EBITDA Margin')),
                ('net_margin', models.FloatField(default=0, verbose_name='Net Margin')),
                ('net_debt_to_ebitda', models.FloatField(default=0, verbose_name='Net Debt / EBITDA')),
                ('net_debt_to_mt_cane', models.FloatField(default=0, verbose_name='Net Debt / MT of Cane')),
                ('indebtness', models.FloatField(default=0, verbose_name='Indebtness')),
                ('short_term_debt', models.FloatField(default=0, verbose_name='Short Term Debt Percent')),
                ('current_ratio', models.FloatField(default=0, verbose_name='Current Ratio')),
                ('username', models.CharField(default='Default User', max_length=30, verbose_name='Username')),
            ],
        ),
        migrations.CreateModel(
            name='currentForecasts',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('factor_label', models.CharField(max_length=50)),
                ('entry_date', models.DateField(default=django.utils.timezone.now)),
                ('forecast_date', models.CharField(max_length=50)),
                ('value', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='financial_simulation_meta_data_historical',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('simulation_date', models.DateField(default=django.utils.timezone.now)),
                ('account', models.CharField(max_length=50)),
                ('datagroup', models.CharField(default='', max_length=50)),
                ('mean_returned', models.FloatField(default=0)),
                ('std_returned', models.FloatField(default=0)),
                ('season', models.CharField(default='23_24', max_length=10)),
                ('username', models.CharField(default='Default User', max_length=30, verbose_name='Username')),
            ],
        ),
        migrations.CreateModel(
            name='financial_simulation_output',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('account', models.CharField(max_length=50)),
                ('data_group', models.CharField(default='Not Listed', max_length=50)),
                ('value', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='forecast_assumptions_user_fin_sim',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('factor_label', models.CharField(max_length=50)),
                ('season', models.CharField(max_length=50)),
                ('entry_date', models.DateField(default=django.utils.timezone.now)),
                ('value', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='hedgebot_results',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Date')),
                ('forecast_period', models.DateField(default=django.utils.timezone.now, verbose_name='Forecast Period')),
                ('season', models.CharField(max_length=50, verbose_name='Season')),
                ('weighted_average_price', models.FloatField(default=0, verbose_name='Weighted Average Price')),
                ('fixed_revenues', models.IntegerField(default=0, verbose_name='Fixed Revenues')),
                ('unhedged_volumes_march_1', models.IntegerField(default=0, verbose_name='Unhedged Volumes Mar 1')),
                ('unhedged_volumes_may', models.IntegerField(default=0, verbose_name='Unhedged Volumes May')),
                ('unhedged_volumes_july', models.IntegerField(default=0, verbose_name='Unhedged Volumes Jul')),
                ('unhedged_volumes_october', models.IntegerField(default=0, verbose_name='Unhedged Volumes Oct')),
                ('unhedged_volumes_march_2', models.IntegerField(default=0, verbose_name='Unhedged Volumes Mar')),
                ('hedge_booleans_march_1', models.IntegerField(default=0, verbose_name='Hedge_Boolean_1')),
                ('hedge_booleans_may', models.IntegerField(default=0, verbose_name='Hedge_Boolean_2')),
                ('hedge_booleans_july', models.IntegerField(default=0, verbose_name='Hedge_Boolean_3')),
                ('hedge_booleans_october', models.IntegerField(default=0, verbose_name='Hedge_Boolean_4')),
                ('hedge_booleans_march_2', models.IntegerField(default=0, verbose_name='Hedge_Boolean_5')),
                ('short_term_indicators_march_1', models.FloatField(default=0, verbose_name='ST_1')),
                ('short_term_indicators_may', models.FloatField(default=0, verbose_name='ST_2')),
                ('short_term_indicators_july', models.FloatField(default=0, verbose_name='ST_3')),
                ('short_term_indicators_october', models.FloatField(default=0, verbose_name='ST_4')),
                ('short_term_indicators_march_2', models.FloatField(default=0, verbose_name='ST_5')),
                ('target_prices_march_1', models.FloatField(default=0, verbose_name='Target Price 1')),
                ('target_prices_may', models.FloatField(default=0, verbose_name='Target Price 2')),
                ('target_prices_july', models.FloatField(default=0, verbose_name='Target Price 3')),
                ('target_prices_october', models.FloatField(default=0, verbose_name='Target Price 4')),
                ('target_prices_march_2', models.FloatField(default=0, verbose_name='Target Price 5')),
                ('current_prices_march_1', models.FloatField(default=0, verbose_name='Current Price Mar')),
                ('current_prices_may', models.FloatField(default=0, verbose_name='Current Price May')),
                ('current_prices_july', models.FloatField(default=0, verbose_name='Current Price Jul')),
                ('current_prices_october', models.FloatField(default=0, verbose_name='Current Price Oct')),
                ('current_prices_march_2', models.FloatField(default=0, verbose_name='Current Price Mar 2')),
                ('attributes_a', models.IntegerField(default=0, verbose_name='Attribute A')),
                ('attributes_b', models.IntegerField(default=0, verbose_name='Attribute B')),
                ('attributes_c', models.IntegerField(default=0, verbose_name='Attribute C')),
                ('attributes_d', models.IntegerField(default=0, verbose_name='Attribute D')),
                ('mid_term_indicators_march_1', models.FloatField(default=0, verbose_name='MT_1')),
                ('mid_term_indicators_may', models.FloatField(default=0, verbose_name='MT_2')),
                ('mid_term_indicators_july', models.FloatField(default=0, verbose_name='MT_3')),
                ('mid_term_indicators_october', models.FloatField(default=0, verbose_name='MT_4')),
                ('mid_term_indicators_march_2', models.FloatField(default=0, verbose_name='MT_5')),
                ('hedged_revenues_march_1', models.IntegerField(default=0, verbose_name='Hedged_Revenues_1')),
                ('hedged_revenues_may', models.IntegerField(default=0, verbose_name='Hedged_Revenues_2')),
                ('hedged_revenues_july', models.IntegerField(default=0, verbose_name='Hedged_Revenues_3')),
                ('hedged_revenues_october', models.IntegerField(default=0, verbose_name='Hedged_Revenues_4')),
                ('hedged_revenues_march_2', models.IntegerField(default=0, verbose_name='Hedged_Revenues_5')),
                ('hedged_volumes_march_1', models.IntegerField(default=0, verbose_name='Hedged_Volumes_1')),
                ('hedged_volumes_may', models.IntegerField(default=0, verbose_name='Hedged_Volumes_2')),
                ('hedged_volumes_july', models.IntegerField(default=0, verbose_name='Hedged_Volumes_3')),
                ('hedged_volumes_october', models.IntegerField(default=0, verbose_name='Hedged_Volumes_4')),
                ('hedged_volumes_march_2', models.IntegerField(default=0, verbose_name='Hedged_Volumes_5')),
                ('average_market_price_march_1', models.FloatField(default=0, verbose_name='Avg_Market_Price_1')),
                ('average_market_price_may', models.FloatField(default=0, verbose_name='Avg_Market_Price_2')),
                ('average_market_price_july', models.FloatField(default=0, verbose_name='Avg_Market_Price_3')),
                ('average_market_price_october', models.FloatField(default=0, verbose_name='Avg_Market_Price_4')),
                ('average_market_price_march_2', models.FloatField(default=0, verbose_name='Avg_Market_Price_5')),
                ('mill_identification_number', models.FloatField(default=0, verbose_name='Identity')),
                ('username', models.CharField(default='Default User', max_length=30, verbose_name='Username')),
            ],
        ),
        migrations.CreateModel(
            name='hedgebot_results_meta_data',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('simulation_date', models.DateField(default=django.utils.timezone.now)),
                ('account', models.CharField(max_length=50)),
                ('mean_returned', models.FloatField(default=0)),
                ('std_returned', models.FloatField(default=0)),
                ('username', models.CharField(default='Default User', max_length=30, verbose_name='Username')),
            ],
        ),
        migrations.CreateModel(
            name='market_data',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('ticker', models.CharField(max_length=30)),
                ('date', models.DateField()),
                ('value', models.FloatField()),
                ('units', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='monte_carlo_market_data',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('simulation_date', models.DateField(default=django.utils.timezone.now)),
                ('forecast_period', models.DateField()),
                ('end_date', models.DateField(default='2024-03-31')),
                ('reference', models.CharField(max_length=50)),
                ('mean_returned', models.FloatField(default=0)),
                ('std_returned', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='risk_var_table',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('label', models.CharField(max_length=30)),
                ('prev_season', models.IntegerField()),
                ('actual_estimate', models.IntegerField()),
                ('low_10', models.IntegerField()),
                ('high_90', models.IntegerField()),
                ('prob_estimate', models.FloatField()),
                ('username', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='simulation_drivers',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('sugar_price', models.DecimalField(decimal_places=2, max_digits=4)),
                ('hydrous_price', models.DecimalField(decimal_places=0, max_digits=5)),
                ('anhydrous_price', models.DecimalField(decimal_places=0, max_digits=5)),
                ('energy_price', models.DecimalField(decimal_places=0, max_digits=5)),
                ('fx_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('selic_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('foreign_debt_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('inflation_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('crude_price', models.DecimalField(decimal_places=2, max_digits=5)),
                ('fertilizer_price', models.DecimalField(decimal_places=0, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='sugar_position_info',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('season', models.CharField(choices=[('2021_22', '2021_22'), ('2022_23', '2022_23'), ('2023_24', '2023_24')], default='2023_24', max_length=10, verbose_name='Season')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('total_production', models.FloatField(default=0, verbose_name='Total Sugar Production (mt)')),
                ('mar1_total', models.FloatField(default=0, verbose_name='Sugar for first Mar Contract (mt)')),
                ('may_total', models.FloatField(default=0, verbose_name='Sugar for May Contract (mt)')),
                ('jul_total', models.FloatField(default=0, verbose_name='Sugar for Jul Contract (mt)')),
                ('oct_total', models.FloatField(default=0, verbose_name='Sugar for Oct Contract (mt)')),
                ('mar2_total', models.FloatField(default=0, verbose_name='Sugar for second Mar Contract (mt)')),
                ('total_hedged', models.FloatField(default=0, verbose_name='Total Sugar Production Hedged (mt)')),
                ('mar1_hedged', models.FloatField(default=0, verbose_name='Hedged Sugar for first Mar Contract (mt)')),
                ('may_hedged', models.FloatField(default=0, verbose_name='Hedged Sugar for May Contract (mt)')),
                ('jul_hedged', models.FloatField(default=0, verbose_name='Hedged Sugar for Jul Contract (mt)')),
                ('oct_hedged', models.FloatField(default=0, verbose_name='Hedged Sugar for Oct Contract (mt)')),
                ('mar2_hedged', models.FloatField(default=0, verbose_name='Hedged Sugar for second Mar Contract (mt)')),
                ('total_unhedged', models.FloatField(default=0, verbose_name='Total Sugar Production Hedged (mt)')),
                ('mar1_unhedged', models.FloatField(default=0, verbose_name='Hedged Sugar for first Mar Contract (mt)')),
                ('may_unhedged', models.FloatField(default=0, verbose_name='Hedged Sugar for May Contract (mt)')),
                ('jul_unhedged', models.FloatField(default=0, verbose_name='Hedged Sugar for Jul Contract (mt)')),
                ('oct_unhedged', models.FloatField(default=0, verbose_name='Hedged Sugar for Oct Contract (mt)')),
                ('mar2_unhedged', models.FloatField(default=0, verbose_name='Hedged Sugar for second Mar Contract (mt)')),
                ('username', models.CharField(default='Default User', max_length=30, verbose_name='Username')),
            ],
        ),
        migrations.CreateModel(
            name='sugar_position_info_2',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('season', models.CharField(choices=[('2021_22', '2021_22'), ('2022_23', '2022_23'), ('2023_24', '2023_24')], default='2023_24', max_length=10, verbose_name='Season')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('mar1_fxpassive_obligation', models.FloatField(default=0)),
                ('mar1_fxpassive_fixed', models.FloatField(default=0)),
                ('mar1_fxpassive_avg_price_cts', models.FloatField(default=0)),
                ('mar1_fxpassive_avg_price_brl', models.FloatField(default=0)),
                ('may_fxpassive_obligation', models.FloatField(default=0)),
                ('may_fxpassive_fixed', models.FloatField(default=0)),
                ('may_fxpassive_avg_price_cts', models.FloatField(default=0)),
                ('may_fxpassive_avg_price_brl', models.FloatField(default=0)),
                ('jul_fxpassive_obligation', models.FloatField(default=0)),
                ('jul_fxpassive_fixed', models.FloatField(default=0)),
                ('jul_fxpassive_avg_price_cts', models.FloatField(default=0)),
                ('jul_fxpassive_avg_price_brl', models.FloatField(default=0)),
                ('oct_fxpassive_obligation', models.FloatField(default=0)),
                ('oct_fxpassive_fixed', models.FloatField(default=0)),
                ('oct_fxpassive_avg_price_cts', models.FloatField(default=0)),
                ('oct_fxpassive_avg_price_brl', models.FloatField(default=0)),
                ('mar2_fxpassive_obligation', models.FloatField(default=0)),
                ('mar2_fxpassive_fixed', models.FloatField(default=0)),
                ('mar2_fxpassive_avg_price_cts', models.FloatField(default=0)),
                ('mar2_fxpassive_avg_price_brl', models.FloatField(default=0)),
                ('mar1_brlfixed_obligation', models.FloatField(default=0)),
                ('mar1_brlfixed_fixed', models.FloatField(default=0)),
                ('mar1_brlfixed_avg_price_cts', models.FloatField(default=0)),
                ('mar1_brlfixed_avg_price_brl', models.FloatField(default=0)),
                ('may_brlfixed_obligation', models.FloatField(default=0)),
                ('may_brlfixed_fixed', models.FloatField(default=0)),
                ('may_brlfixed_avg_price_cts', models.FloatField(default=0)),
                ('may_brlfixed_avg_price_brl', models.FloatField(default=0)),
                ('jul_brlfixed_obligation', models.FloatField(default=0)),
                ('jul_brlfixed_fixed', models.FloatField(default=0)),
                ('jul_brlfixed_avg_price_cts', models.FloatField(default=0)),
                ('jul_brlfixed_avg_price_brl', models.FloatField(default=0)),
                ('oct_brlfixed_obligation', models.FloatField(default=0)),
                ('oct_brlfixed_fixed', models.FloatField(default=0)),
                ('oct_brlfixed_avg_price_cts', models.FloatField(default=0)),
                ('oct_brlfixed_avg_price_brl', models.FloatField(default=0)),
                ('mar2_brlfixed_obligation', models.FloatField(default=0)),
                ('mar2_brlfixed_fixed', models.FloatField(default=0)),
                ('mar2_brlfixed_avg_price_cts', models.FloatField(default=0)),
                ('mar2_brlfixed_avg_price_brl', models.FloatField(default=0)),
                ('username', models.CharField(default='Default User', max_length=30, verbose_name='Username')),
            ],
        ),
        migrations.CreateModel(
            name='sugar_trade_book',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('factor_label', models.CharField(max_length=50)),
                ('season', models.CharField(max_length=50)),
                ('entry_date', models.DateField(default=django.utils.timezone.now)),
                ('value', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='target_prices',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('season', models.CharField(default='23_24', max_length=30)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('mar1_cts', models.FloatField(default=0)),
                ('mar1_brl', models.FloatField(default=0)),
                ('may_cts', models.FloatField(default=0)),
                ('may_brl', models.FloatField(default=0)),
                ('jul_cts', models.FloatField(default=0)),
                ('jul_brl', models.FloatField(default=0)),
                ('oct_cts', models.FloatField(default=0)),
                ('oct_brl', models.FloatField(default=0)),
                ('mar2_cts', models.FloatField(default=0)),
                ('mar2_brl', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='user_forecasts_assumptions_results',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('season', models.CharField(max_length=10, verbose_name='Season')),
                ('own_area', models.FloatField(default=0, verbose_name='Own area-Own Cane Assumptions-ha')),
                ('leased_area', models.FloatField(default=0, verbose_name='Leased area-Own Cane Assumptions-ha')),
                ('yield_mt', models.FloatField(default=0, verbose_name='Yield-Own Cane Assumptions-mt of cane/ha')),
                ('own_cane', models.FloatField(default=0, verbose_name='Own cane-Own Cane Assumptions-000 mt')),
                ('lease_cost', models.FloatField(default=0, verbose_name='Lease cost-Own Cane Assumptions-mt of cane/ha')),
                ('avg_trs', models.FloatField(default=0, verbose_name='Average TRS, lease contract-Own Cane Assumptions-kg/mt of cane')),
                ('lease_cost_2', models.FloatField(default=0, verbose_name='Lease cost-Own Cane Assumptions-BRL/ha')),
                ('planting_area', models.FloatField(default=0, verbose_name='Planting area-Own Cane Assumptions-000 ha')),
                ('third_party_cane', models.FloatField(default=0, verbose_name='Third party cane-Third Party Cane Assumptions-000 mt')),
                ('avg_trs_cane_contract', models.FloatField(default=0, verbose_name='Average TRS, cane contract-Third Party Cane Assumptions-kg/mt of cane')),
                ('third_party_cane_cost', models.FloatField(default=0, verbose_name='Third party cane cost-Third Party Cane Assumptions-BRL/mt of cane')),
                ('avg_trs_2', models.FloatField(default=0, verbose_name='Average TRS-Production Mix Assumptions-kg/mt of cane')),
                ('sugar_mix', models.FloatField(default=0, verbose_name='Sugar-Production Mix Assumptions-%')),
                ('hydrous_mix', models.FloatField(default=0, verbose_name='Hydrous-Production Mix Assumptions-%')),
                ('anhydrous_mix', models.FloatField(default=0, verbose_name='Anhydrous-Production Mix Assumptions-%')),
                ('trs_sugar', models.FloatField(default=0, verbose_name='TRS x Sugar-Production Mix Assumptions-kg x kg')),
                ('atr_hydrous', models.FloatField(default=0, verbose_name='ATR x Hydrous-Production Mix Assumptions-kg x l')),
                ('atr_anhydrous', models.FloatField(default=0, verbose_name='ATR x Anhydrous-Production Mix Assumptions-kg x l')),
                ('energy_production', models.FloatField(default=0, verbose_name='Energy production-Production Mix Assumptions-MWh')),
                ('sugar_price', models.FloatField(default=0, verbose_name='Sugar-Price Assumptions-cts/lb')),
                ('hydrous_price', models.FloatField(default=0, verbose_name='Hydrous-Price Assumptions-BRL/m3')),
                ('anhydrous_price', models.FloatField(default=0, verbose_name='Anhydrous-Price Assumptions-BRL/m3')),
                ('energy_price', models.FloatField(default=0, verbose_name='Energy-Price Assumptions-BRL/MWh')),
                ('fx_rate', models.FloatField(default=0, verbose_name='Exchange rate-Price Assumptions-BRL/USD')),
                ('trs_price', models.FloatField(default=0, verbose_name='TRS-Price Assumptions-BRL/kg')),
                ('dom_ir', models.FloatField(default=0, verbose_name='Domestic interest rate-Price Assumptions-% p.a.')),
                ('foreign_ir', models.FloatField(default=0, verbose_name='Foreign interest rate-Price Assumptions-% p.a.')),
                ('inflation', models.FloatField(default=0, verbose_name='Inflation-Price Assumptions-% a.a')),
                ('crude_oil', models.FloatField(default=0, verbose_name='Crude oil-Price Assumptions-USD/bbl')),
                ('fertilizers', models.FloatField(default=0, verbose_name='Fertilizers-Price Assumptions-USD/mt')),
                ('initial_cash', models.FloatField(default=0, verbose_name='Initial cash-Balance Sheet Assumptions-000 BRL')),
                ('acc_rec', models.FloatField(default=0, verbose_name='Accounts receivable-Balance Sheet Assumptions-days')),
                ('inventories', models.FloatField(default=0, verbose_name='Inventories-Balance Sheet Assumptions-days')),
                ('orther_current_assets', models.FloatField(default=0, verbose_name='Other current assets-Balance Sheet Assumptions-% of revenues')),
                ('other_non_current_assets', models.FloatField(default=0, verbose_name='Other non current assets-Balance Sheet Assumptions-% of revenues')),
                ('st_acc_pay', models.FloatField(default=0, verbose_name='Short term accounts payable-Balance Sheet Assumptions-days')),
                ('other_current_liabilities', models.FloatField(default=0, verbose_name='Other current liabilities-Balance Sheet Assumptions-% of COGS')),
                ('other_non_current_liabilities', models.FloatField(default=0, verbose_name='Other non current liabilities-Balance Sheet Assumptions-% of COGS')),
                ('issued_capital', models.FloatField(default=0, verbose_name='Issued capital-Balance Sheet Assumptions-000 BRL')),
                ('income_tax_rate', models.FloatField(default=0, verbose_name='Income tax rate-Balance Sheet Assumptions-%')),
                ('sales_expense', models.FloatField(default=0, verbose_name='Sales expenses-SGA Assumptions-BRL/mt of cane')),
                ('admin_expense', models.FloatField(default=0, verbose_name='Administrative expenses-SGA Assumptions-BRL/mt of cane')),
                ('other_sga', models.FloatField(default=0, verbose_name='Other SG&A-SGA Assumptions-BRL/mt of cane')),
                ('avg_cost_usd_debt_libor', models.FloatField(default=0, verbose_name='Average cost (coupon), USD debt-Indebtness Assumptions-Libor +, p.a.')),
                ('avg_cost_usd_debt_cdi', models.FloatField(default=0, verbose_name='Average cost (coupon), USD debt-Indebtness Assumptions-CDI +, p.a.')),
                ('usd_debt_st_usd', models.FloatField(default=0, verbose_name='US$ debt, short term-Indebtness Assumptions-000 USD')),
                ('usd_debt_lt_usd', models.FloatField(default=0, verbose_name='US$ debt, long term-Indebtness Assumptions-000 USD')),
                ('usd_debt_total_usd', models.FloatField(default=0, verbose_name='US$ debt, total-Indebtness Assumptions-000 USD')),
                ('usd_debt_lt_brl', models.FloatField(default=0, verbose_name='US$ debt, short term-Indebtness Assumptions-000 BRL')),
                ('usd_debt_st_brl', models.FloatField(default=0, verbose_name='US$ debt, long term-Indebtness Assumptions-000 BRL')),
                ('usd_debt_total_brl', models.FloatField(default=0, verbose_name='US$ debt, total-Indebtness Assumptions-000 BRL')),
                ('brl_debt_st', models.FloatField(default=0, verbose_name='R$ debt, short term-Indebtness Assumptions-000 BRL')),
                ('brl_debt_lt', models.FloatField(default=0, verbose_name='R$ debt, long term-Indebtness Assumptions-000 BRL')),
                ('total_debt_st', models.FloatField(default=0, verbose_name='Total debt, short term-Indebtness Assumptions-000 BRL')),
                ('total_debt_lt', models.FloatField(default=0, verbose_name='Total debt, long term-Indebtness Assumptions-000 BRL')),
                ('total_debt', models.FloatField(default=0, verbose_name='Total debt-Indebtness Assumptions-000 BRL')),
                ('fin_expenses_usd_debt', models.FloatField(default=0, verbose_name='Financial expenses, US$ debt-Indebtness Assumptions-000 BRL')),
                ('fin_expenses_brl_debt', models.FloatField(default=0, verbose_name='Financial expenses, R$ debt-Indebtness Assumptions-000 BRL')),
                ('total_financial_expenses', models.FloatField(default=0, verbose_name='Total financial expenses-Indebtness Assumptions-000 BRL')),
                ('inputs', models.FloatField(default=0, verbose_name='Inputs-Production Cost Assumptions-BRL/mt of cane')),
                ('fuel', models.FloatField(default=0, verbose_name='Fuel-Production Cost Assumptions-BRL/mt of cane')),
                ('freights', models.FloatField(default=0, verbose_name='Freights-Production Cost Assumptions-BRL/mt of cane')),
                ('labor_cost', models.FloatField(default=0, verbose_name='Labor cost-Production Cost Assumptions-BRL/mt of cane')),
                ('industrial_cost', models.FloatField(default=0, verbose_name='Industrial cost-Production Cost Assumptions-BRL/mt of cane')),
                ('depreciation_prod_cost', models.FloatField(default=0, verbose_name='Depreciation-Production Cost Assumptions-BRL/mt of cane')),
                ('planting_cost', models.FloatField(default=0, verbose_name='Planting cost-Production Cost Assumptions-BRL/ha')),
                ('cane_crushed', models.FloatField(default=0, verbose_name='Cane crushed-Final Volume Forecasts-000 mt')),
                ('sugar_production', models.FloatField(default=0, verbose_name='Sugar production-Final Volume Forecasts-000 mt')),
                ('hydrous_production', models.FloatField(default=0, verbose_name='Hydrous production-Final Volume Forecasts-000 m3')),
                ('anhydrous_production', models.FloatField(default=0, verbose_name='Anhydrous production-Final Volume Forecasts-000 m3')),
                ('energy_production_2', models.FloatField(default=0, verbose_name='Energy production-Final Volume Forecasts-MWh')),
                ('sugar_revenues_usd', models.FloatField(default=0, verbose_name='Sugar revenues-Income Statement Forecasts-000 USD')),
                ('sugar_revenues_brl', models.FloatField(default=0, verbose_name='Sugar Revenues-Income Statement Forecasts-000 BRL')),
                ('hydrous_revenues', models.FloatField(default=0, verbose_name='Hydrous revenues-Income Statement Forecasts-000 BRL')),
                ('anhydrous_revenues', models.FloatField(default=0, verbose_name='Anhydrous revenues-Income Statement Forecasts-000 BRL')),
                ('energy_revenues', models.FloatField(default=0, verbose_name='Energy revenues-Income Statement Forecasts-000 BRL')),
                ('total_revenues', models.FloatField(default=0, verbose_name='Total revenues-Income Statement Forecasts-000 BRL')),
                ('lease_cost_3', models.FloatField(default=0, verbose_name='Lease cost-Income Statement Forecasts-000 BRL')),
                ('third_party_cane_cost_2', models.FloatField(default=0, verbose_name='Third party cane cost-Income Statement Forecasts-000 BRL')),
                ('inputs_2', models.FloatField(default=0, verbose_name='Inputs-Income Statement Forecasts-000 BRL')),
                ('fuel_2', models.FloatField(default=0, verbose_name='Fuel-Income Statement Forecasts-000 BRL')),
                ('freights_2', models.FloatField(default=0, verbose_name='Freights-Income Statement Forecasts-000 BRL')),
                ('labor_cost_2', models.FloatField(default=0, verbose_name='Labor cost-Income Statement Forecasts-000 BRL')),
                ('industrial_cost_2', models.FloatField(default=0, verbose_name='Industrial cost-Income Statement Forecasts-000 BRL')),
                ('depreciation_2', models.FloatField(default=0, verbose_name='Depreciation-Income Statement Forecasts-000 BRL')),
                ('planting_cost_2', models.FloatField(default=0, verbose_name='Planting cost-Income Statement Forecasts-000 BRL')),
                ('total_cogs', models.FloatField(default=0, verbose_name='Total COGS-Income Statement Forecasts-000 BRL')),
                ('gross_profit', models.FloatField(default=0, verbose_name='Gross profit-Income Statement Forecasts-000 BRL')),
                ('sales_expenses', models.FloatField(default=0, verbose_name='Sales expenses-Cash Flow Statement Forecasts-000 BRL')),
                ('administrative_expenses', models.FloatField(default=0, verbose_name='Administrative expenses-Cash Flow Statement Forecasts-000 BRL')),
                ('other_sga_2', models.FloatField(default=0, verbose_name='Other SG&A-Cash Flow Statement Forecasts-000 BRL')),
                ('total_sga', models.FloatField(default=0, verbose_name='Total SG&A-Cash Flow Statement Forecasts-000 BRL')),
                ('ebit', models.FloatField(default=0, verbose_name='EBIT-Cash Flow Statement Forecasts-000 BRL')),
                ('financial_expenses', models.FloatField(default=0, verbose_name='Financial expenses-Cash Flow Statement Forecasts-000 BRL')),
                ('profit_before_taxes', models.FloatField(default=0, verbose_name='Profit before taxes-Cash Flow Statement Forecasts-000 BRL')),
                ('income_tax', models.FloatField(default=0, verbose_name='Income tax-Cash Flow Statement Forecasts-000 BRL')),
                ('net_income', models.FloatField(default=0, verbose_name='Net income-Cash Flow Statement Forecasts-000 BRL')),
                ('depreciation', models.FloatField(default=0, verbose_name='Depreciation-Cash Flow Statement Forecasts-000 BRL')),
                ('working_capital_variation', models.FloatField(default=0, verbose_name='Working capital variation-Cash Flow Statement Forecasts-000 BRL')),
                ('cash_flow_from_operations', models.FloatField(default=0, verbose_name='Cash flow from operations-Cash Flow Statement Forecasts-000 BRL')),
                ('capex', models.FloatField(default=0, verbose_name='CAPEX-Cash Flow Statement Forecasts-000 BRL')),
                ('write_offs', models.FloatField(default=0, verbose_name='Write offs-Cash Flow Statement Forecasts-000 BRL')),
                ('cash_flow_from_investment_activities', models.FloatField(default=0, verbose_name='Cas flow from investment activities-Cash Flow Statement Forecasts-000 BRL')),
                ('debt_amortization', models.FloatField(default=0, verbose_name='Debt amortization-Cash Flow Statement Forecasts-000 BRL')),
                ('new_debt', models.FloatField(default=0, verbose_name='New debt-Cash Flow Statement Forecasts-000 BRL')),
                ('cash_financing', models.FloatField(default=0, verbose_name='Cash flow from financing activities-Cash Flow Statement Forecasts-000 BRL')),
                ('change_in_cash', models.FloatField(default=0, verbose_name='Change in cash-Cash Flow Statement Forecasts-000 BRL')),
                ('initial_cash_2', models.FloatField(default=0, verbose_name='Initial cash-Cash Flow Statement Forecasts-000 BRL')),
                ('ending_cash', models.FloatField(default=0, verbose_name='Ending cash-Cash Flow Statement Forecasts-000 BRL')),
                ('minimum_refinancing', models.FloatField(default=0, verbose_name='Minimum refinancing-Cash Flow Statement Forecasts-000 BRL')),
                ('cash', models.FloatField(default=0, verbose_name='Cash-Asset Sheet Forecasts-000 BRL')),
                ('accounts_receivable', models.FloatField(default=0, verbose_name='Accounts receivable-Asset Sheet Forecasts-000 BRL')),
                ('inventories_2', models.FloatField(default=0, verbose_name='Inventories-Asset Sheet Forecasts-000 BRL')),
                ('other_current_assets', models.FloatField(default=0, verbose_name='Other current assets-Asset Sheet Forecasts-000 BRL')),
                ('total_current_assets', models.FloatField(default=0, verbose_name='Total current assets-Asset Sheet Forecasts-000 BRL')),
                ('ppe', models.FloatField(default=0, verbose_name='PP&E-Asset Sheet Forecasts-000 BRL')),
                ('other_non_current_assets_2', models.FloatField(default=0, verbose_name='Other non current assets-Asset Sheet Forecasts-000 BRL')),
                ('total_non_current_assets', models.FloatField(default=0, verbose_name='Total non current assets-Asset Sheet Forecasts-000 BRL')),
                ('total_assets', models.FloatField(default=0, verbose_name='Total assets-Asset Sheet Forecasts-000 BRL')),
                ('short_term_accounts_payable', models.FloatField(default=0, verbose_name='Short term accounts payable-Liabilities Sheet Forecasts-000 BRL')),
                ('short_term_debt', models.FloatField(default=0, verbose_name='Short term debt-Liabilities Sheet Forecasts-000 BRL')),
                ('other_current_liabilities_2', models.FloatField(default=0, verbose_name='Other current liabilities-Liabilities Sheet Forecasts-000 BRL')),
                ('total_current_liabilities', models.FloatField(default=0, verbose_name='Total current liabilities-Liabilities Sheet Forecasts-000 BRL')),
                ('long_term_debt', models.FloatField(default=0, verbose_name='Long term debt-Liabilities Sheet Forecasts-000 BRL')),
                ('other_non_current_liabilities_2', models.FloatField(default=0, verbose_name='Other non current liabilities-Liabilities Sheet Forecasts-000 BRL')),
                ('total_non_current_liabilities', models.FloatField(default=0, verbose_name='Total non current liabilities-Liabilities Sheet Forecasts-000 BRL')),
                ('total_liabilities', models.FloatField(default=0, verbose_name='Total liabilities-Liabilities Sheet Forecasts-000 BRL')),
                ('issued_capital_2', models.FloatField(default=0, verbose_name='Issued capital-Liabilities Sheet Forecasts-000 BRL')),
                ('retained_earnings', models.FloatField(default=0, verbose_name='Retained earnings-Liabilities Sheet Forecasts-000 BRL')),
                ('total_equity', models.FloatField(default=0, verbose_name='Total equity-Liabilities Sheet Forecasts-000 BRL')),
                ('liabilities_plus_equity', models.FloatField(default=0, verbose_name='Liabilities + equity-Liabilities Sheet Forecasts-000 BRL')),
                ('gross_margin', models.FloatField(default=0, verbose_name='Gross margin-Financial KPI Forecasts-%')),
                ('ebitda', models.FloatField(default=0, verbose_name='EBITDA-Financial KPI Forecasts-000 BRL')),
                ('ebitda_margin', models.FloatField(default=0, verbose_name='EBITDA margin-Financial KPI Forecasts-%')),
                ('net_income_margin', models.FloatField(default=0, verbose_name='Net income margin-Financial KPI Forecasts-%')),
                ('net_debt', models.FloatField(default=0, verbose_name='Net debt-Financial KPI Forecasts-000 BRL')),
                ('net_debt_ebitda', models.FloatField(default=0, verbose_name='Net debt/EBITDA-Financial KPI Forecasts-%')),
                ('net_debt_mt_of_cane', models.FloatField(default=0, verbose_name='Net debt/mt of cane-Financial KPI Forecasts-%')),
                ('indebtedness', models.FloatField(default=0, verbose_name='Indebtedness-Financial KPI Forecasts-%')),
                ('short_term', models.FloatField(default=0, verbose_name='Short term-Financial KPI Forecasts-% of total')),
                ('current_ratio', models.FloatField(default=0, verbose_name='Current ratio-Financial KPI Forecasts-%')),
                ('revenue_variation', models.FloatField(default=0, verbose_name='Revenue variation-Financial KPI Forecasts-% YoY')),
                ('income_variation', models.FloatField(default=0, verbose_name='Income variation-Financial KPI Forecasts-% YoY')),
                ('dscr', models.FloatField(default=0, verbose_name='DSCR-Financial KPI Forecasts-%')),
                ('username', models.CharField(default='Default User', max_length=30, verbose_name='Username')),
            ],
        ),
        migrations.CreateModel(
            name='waterfall_data',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('account', models.CharField(max_length=50)),
                ('data_group', models.CharField(default='Not Listed', max_length=50)),
                ('value', models.CharField(default='-', max_length=50)),
            ],
        ),
    ]
